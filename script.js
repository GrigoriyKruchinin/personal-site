document.addEventListener("DOMContentLoaded", () => {
  const themeToggle = document.getElementById("themeToggle");
  const langToggle = document.getElementById("langToggle");
  const slider = document.querySelector(".lang-slider");
  const yearEl = document.getElementById("year");

  yearEl.textContent = new Date().getFullYear();

  // ===== THEME SWITCH =====
  themeToggle.addEventListener("click", () => {
    const body = document.body;
    const currentTheme = body.getAttribute("data-theme");
    const newTheme = currentTheme === "dark" ? "light" : "dark";
    body.setAttribute("data-theme", newTheme);
    themeToggle.textContent = newTheme === "dark" ? "üåô" : "‚òÄÔ∏è";
    localStorage.setItem("theme", newTheme);
  });

  // load theme
  const savedTheme = localStorage.getItem("theme") || "dark";
  document.body.setAttribute("data-theme", savedTheme);
  themeToggle.textContent = savedTheme === "dark" ? "üåô" : "‚òÄÔ∏è";

  // ===== LANGUAGE SWITCH =====
  const translations = {
    ru: {
      page_title: "–ì—Ä–∏–≥–æ—Ä–∏–π –ö—Ä—É—á–∏–Ω–∏–Ω ‚Äî Python Developer",
      name: "–ì—Ä–∏–≥–æ—Ä–∏–π –ö—Ä—É—á–∏–Ω–∏–Ω",
      role: "Lead / Python Developer",
      download_resume: "üìÑ –°–∫–∞—á–∞—Ç—å —Ä–µ–∑—é–º–µ",
      about_title: "–û–±–æ –º–Ω–µ",
      about_text:
        "–û–ø—ã—Ç–Ω—ã–π Python-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –∏ —Ç–∏–º–ª–∏–¥, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å –Ω–∞ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è—Ö, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤. –õ—é–±–ª—é —á–∏—Å—Ç—ã–π –∫–æ–¥, –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º—ã–µ —Å–∏—Å—Ç–µ–º—ã.",
      skills_title: "–ù–∞–≤—ã–∫–∏",
      skills_backend: "Backend & Data",
      skills_scraping: "Integrations",
      skills_testing: "Testing & Automation",
      skills_brokers: "Brokers & Queue",
      skills_devops: "DevOps & Cloud",
      skills_tools: "Tools & Code style",
      experience_title: "–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã",

      // LLCBOOSTER
      llc_name: "LLCBOOSTER GROUP",
      llc_sub: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å–∞ –≤ –°–®–ê –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–π",
      llc_role: "Lead / Python Developer",
      llc_t1_title: "Helpdesk",
      llc_t1_action:
        "–†–∞–∑—Ä–∞–±–æ—Ç–∞–ª —Å–µ—Ä–≤–∏—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ Email, WhatsApp –∏ Telegram —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–µ—Ä–µ–≤–æ–¥–æ–º –∏ –æ—Ç–≤–µ—Ç–∞–º–∏ –≤ –∏—Å—Ö–æ–¥–Ω—ã–π –∫–∞–Ω–∞–ª.",
      llc_t1_result:
        "–°–∫–æ—Ä–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã—Ä–æ—Å–ª–∞ –Ω–∞ 60%, –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ —Å–Ω–∏–∑–∏–ª–æ—Å—å –≤ 2.5 —Ä–∞–∑–∞.",
      llc_t2_title: "–û–±—Ö–æ–¥ –∫–∞–ø—á",
      llc_t2_action:
        "–ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–ª –æ–±—Ö–æ–¥ hCaptcha, gCaptcha –∏ Cloudflare –≤ –ø–∞—Ä—Å–∏–Ω–≥–æ–≤—ã–µ –º–æ–¥—É–ª–∏.",
      llc_t2_result:
        "–ü–æ–≤—ã—Å–∏–ª —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏ —Å–Ω–∏–∑–∏–ª —á–∏—Å–ª–æ —Å–±–æ–µ–≤.",
      llc_t3_title: "PDF-—Ñ–æ—Ä–º—ã",
      llc_t3_action:
        "–°–æ–∑–¥–∞–ª –º–æ–¥—É–ª—å –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è PDF-—Ñ–æ—Ä–º –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.",
      llc_t3_result:
        "–°–æ–∫—Ä–∞—Ç–∏–ª –≤—Ä–µ–º—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º –∏ —Å–Ω–∏–∑–∏–ª –æ—à–∏–±–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.",
      llc_t4_title: "Telegram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è",
      llc_t4_action:
        "–ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–ª Telegram-–±–æ—Ç–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫.",
      llc_t4_result:
        "–ü–æ–≤—ã—Å–∏–ª –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ –∏–Ω—Ü–∏–¥–µ–Ω—Ç—ã.",

      // OnlyFace
      only_name: "FaceSwapModel: OnlyFace",
      only_sub: "–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Å –∑–∞–º–µ–Ω–æ–π –ª–∏—Ü –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏",
      only_role: "Team Lead / Python Developer",
      only_t1_title: "–ü–ª–∞—Ç–µ–∂–∏",
      only_t1_action:
        "–ü–æ–¥–∫–ª—é—á–∏–ª –∏ –Ω–∞—Å—Ç—Ä–æ–∏–ª Stripe –¥–ª—è –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞.",
      only_t1_result: "–û–±–µ—Å–ø–µ—á–∏–ª —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫ –¥–æ—Ö–æ–¥–∞.",
      only_t2_title: "KYC",
      only_t2_action:
        "–ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–ª –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ SumSub –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞.",
      only_t2_result: "–°–Ω–∏–∑–∏–ª —Ä–∏—Å–∫ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞ –∏ –ø–æ–≤—ã—Å–∏–ª –¥–æ–≤–µ—Ä–∏–µ.",
      only_t3_title: "–°–æ—Ü. –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è",
      only_t3_action:
        "–†–µ–∞–ª–∏–∑–æ–≤–∞–ª –≤—Ö–æ–¥ —á–µ—Ä–µ–∑ Google, Twitter –∏ Telegram.",
      only_t3_result:
        "–£–ø—Ä–æ—Å—Ç–∏–ª —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ —É–≤–µ–ª–∏—á–∏–ª —á–∏—Å–ª–æ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.",

      // Vanger
      vanger_name: "–í–∞–Ω–≥–µ—Ä.—Ä—Ñ",
      vanger_sub: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–∞–π—Ç–æ–≤ –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
      vanger_role: "Python Developer",
      v_t1_title: "Telegram-–±–æ—Ç —Å AI",
      v_t1_action:
        "–†–∞–∑—Ä–∞–±–æ—Ç–∞–ª Telegram-–±–æ—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É—é—â–µ–≥–æ YandexGPT –∏ –¥–∞–Ω–Ω—ã–µ —Å —Å–∞–π—Ç–∞ –∑–∞–∫–∞–∑—á–∏–∫–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.",
      v_t1_result: "–£–ª—É—á—à–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ–ø—ã—Ç –∏ –ø–æ–≤—ã—Å–∏–ª –∫–æ–Ω–≤–µ—Ä—Å–∏—é.",
      v_t2_title: "–ö—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª—ë–∫",
      v_t2_action:
        "–†–µ–∞–ª–∏–∑–æ–≤–∞–ª —Å–∏—Å—Ç–µ–º—É –∫–æ—à–µ–ª—å–∫–∞ –∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è –∏–≥—Ä–æ–≤–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã.",
      v_t2_result:
        "–û–±–µ—Å–ø–µ—á–∏–ª –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ–≤–æ–¥—ã.",
      v_t3_title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è",
      v_t3_action:
        "–†–∞–∑—Ä–∞–±–æ—Ç–∞–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∑–≤–æ–Ω–∫–æ–≤ —Å –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞–º–∏ —á–µ—Ä–µ–∑ Calendly –∏ Google Calendar.",
      v_t3_result:
        "–°–æ–∫—Ä–∞—Ç–∏–ª –≤—Ä–µ–º—è –Ω–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –≤—Å—Ç—Ä–µ—á –∏ —É—Å—Ç—Ä–∞–Ω–∏–ª –∫–æ–ª–ª–∏–∑–∏–∏ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏.",

      // Education
      education_title: "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ",
      education_python_dev: "Python —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
      education_bachelor: "–ë–∞–∫–∞–ª–∞–≤—Ä —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞",
      courses_title: "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã",

      footer_name: "–ì—Ä–∏–≥–æ—Ä–∏–π –ö—Ä—É—á–∏–Ω–∏–Ω"
    },

    en: {
      page_title: "Grigorii Kruchinin ‚Äî Python Developer",
      name: "Grigorii Kruchinin",
      role: "Lead / Python Developer",
      download_resume: "üìÑ Download Resume",
      about_title: "About Me",
      about_text:
        "Experienced Python developer and team lead specializing in architecture design, integrations, automation, and process optimization. Passionate about clean code, async solutions, and scalable systems.",
      skills_title: "Skills",
      skills_backend: "Backend & Data",
      skills_scraping: "Integrations",
      skills_testing: "Testing & Automation",
      skills_brokers: "Brokers & Queue",
      skills_devops: "DevOps & Cloud",
      skills_tools: "Tools & Code style",
      experience_title: "Work Experience",

      llc_name: "LLCBOOSTER GROUP",
      llc_sub: "Business registration automation in the US and operations support",
      llc_role: "Lead / Python Developer",
      llc_t1_title: "Helpdesk",
      llc_t1_action:
        "Developed a service to handle messages from Email, WhatsApp and Telegram with automatic translation and replies to the original channel.",
      llc_t1_result:
        "Increased processing speed by 60%, reduced response time by 2.5x.",
      llc_t2_title: "Captcha Bypass",
      llc_t2_action:
        "Integrated hCaptcha, gCaptcha, and Cloudflare bypass into parsing modules.",
      llc_t2_result:
        "Improved parsing stability and reduced failures.",
      llc_t3_title: "PDF Forms",
      llc_t3_action:
        "Created an auto-fill module for PDF forms in various formats.",
      llc_t3_result:
        "Reduced form completion time and minimized user errors.",
      llc_t4_title: "Telegram Integration",
      llc_t4_action:
        "Integrated a Telegram bot for notifications and error logging.",
      llc_t4_result:
        "Improved process transparency and response speed to incidents.",

      only_name: "FaceSwapModel: OnlyFace",
      only_sub: "Real-time face-swapping social platform",
      only_role: "Team Lead / Python Developer",
      only_t1_title: "Payments",
      only_t1_action:
        "Integrated Stripe to monetize the product.",
      only_t1_result: "Provided a stable revenue stream.",
      only_t2_title: "KYC",
      only_t2_action:
        "Integrated SumSub verification to prevent fraud.",
      only_t2_result: "Reduced fraud risk and improved trust.",
      only_t3_title: "Social Auth",
      only_t3_action:
        "Implemented login via Google, Twitter, and Telegram.",
      only_t3_result:
        "Simplified registration and increased new user signups.",

      vanger_name: "Vanger.rf",
      vanger_sub: "Website and application development",
      vanger_role: "Python Developer",
      v_t1_title: "Telegram-bot with AI",
      v_t1_action:
        "Developed a Telegram bot using YandexGPT and data from the customer's website to answer user queries.",
      v_t1_result: "Improved user experience and increased conversion rates.",
      v_t2_title: "Crypto Wallet",
      v_t2_action:
        "Implemented wallet and transaction system for gaming platform.",
      v_t2_result:
        "Ensured secure storage and transfers.",
      v_t3_title: "Booking automation",
      v_t3_action:
        "Developed an app to automatically book calls with investors via Calendly and Google Calendar.",
      v_t3_result:
        "Reduced meeting organization time and eliminated scheduling conflicts.",

      // Education
      education_title: "Education",
      education_python_dev: "Python Developer",
      education_bachelor: "Bachelor of Civil Engineering",
      courses_title: "Courses",

      footer_name: "Grigorii Kruchinin"
    }
  };

  function setLang(lang) {
    document.querySelectorAll("[data-i18n]").forEach((el) => {
      const key = el.getAttribute("data-i18n");
      if (translations[lang][key]) {
        el.textContent = translations[lang][key];
      }
    });
    localStorage.setItem("lang", lang);
    slider.style.transform = lang === "en" ? "translateX(32px)" : "translateX(0px)";
  }

  langToggle.addEventListener("click", () => {
    const currentLang = localStorage.getItem("lang") || "ru";
    const newLang = currentLang === "ru" ? "en" : "ru";
    setLang(newLang);
  });

  // Load language
  const savedLang = localStorage.getItem("lang") || "ru";
  setLang(savedLang);
});